/* Basic Styling */
html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html,
body {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

/* Basic colors */
:root {
  --themeColor: #ee7622;
  --matchedCard: #eee;
}

/* Board grid */
#game-board {
  display: grid;
  grid-template-columns: repeat(4, minmax(48px, 1fr));
  grid-template-rows: repeat(4, minmax(48px, 100px));
  grid-gap: 1rem;
  margin: 0 1rem;
  padding: 0;
}

/* Styling card */
.card {
  /*
    Center symbol on the card vertically
    See https://css-tricks.com/centering-css-complete-guide/
  */
  display: flex;
  flex-direction: column;
  justify-content: center;

  /* Remove bullets */
  list-style-type: none;

  /* Card takes all available space of the grid-cell */
  width: 100%;
  height: 100%;

  /* The back of a card */
  background-color: var(--themeColor);
  font-size: 3rem;
  text-align: center;

  /* Hide card's symbol by default */
  color: transparent;

  /* Visually show that cards are clickable */
  cursor: pointer;

}

/* Styling flipped card */
.flipped {
  /* Visually show that flipped cards are not clickable */
  cursor: default;

  background-color: var(--matchedCard);

  /* Launch flip animation */
  animation: flipIn 1s;

  /* Make the card's symbol visible */
  color: inherit;
}

/* Styling matched card */
.matched {
  /* Visually show that matched cards are not clickable */
  cursor: default;

  background-color: var(--matchedCard);

  /* Make the card's symbol visible */
  color: inherit;

  /* Launch animation that shows that guess is correct */
  animation: correct 1s;
}

/* Styling and animating cards that have been guessed incorrectly */
.incorrect {
  /* Launch animation that shows that guess is incorrect */
  animation: changeCardColor 1s steps(1, end), shake 1s, flipOut 1s 1s;
}

/*
  Animate correct guess
  Source: http://www.theappguruz.com/tag-tools/web/CSSAnimations/
*/
@keyframes correct {
  0% {
    transform: scale3d(1, 1, 1);
  }
  10%, 20% {
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }
  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }
  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

/*
  Animate incorrect guess
  Inspired by: http://www.theappguruz.com/tag-tools/web/CSSAnimations/
*/
@keyframes shake {
  0%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }
  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

/* Make not matched cards red and show their symbols */
@keyframes changeCardColor {
  from { background: #f00; color: inherit; }
  to { background: var(--themeColor); color: transparent; }
}

/*
  Animate a card's flip
  Source: http://www.theappguruz.com/tag-tools/web/CSSAnimations/
*/
@keyframes flipIn {
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    transition-timing-function: ease-in;
  }
  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    transition-timing-function: ease-in;
  }
  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
  }
  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }
  100% {
    transform: perspective(400px);
  }
}

@keyframes flipOut {
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, -90deg);
    transition-timing-function: ease-in;
  }
  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, 20deg);
    transition-timing-function: ease-in;
  }
  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, -10deg);
  }
  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, 5deg);
  }
  100% {
    transform: perspective(400px);
  }
}
